<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>memetao</title>
    <link></link>
    <description>memetao的成长轨迹</description>
    <language>zh-CN</language>
    <pubDate>Wed, 31 Jul 2024 21:07:02 +0800</pubDate>
    <lastBuildDate>Wed, 31 Jul 2024 21:07:02 +0800</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    <atom:link href="/static/xml/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows 线程</title>
      <link>/posts/2024/07/24/WindowsThreadStack.html</link>
      <description>windows线程线程包含三个东西:ThreadKernalObjectStackTEB内核对象：ThreadContext寄存器状态:instructionpointer(指令地址)andstackpointerregisters(...</description>
      <pubDate>Wed, 24 Jul 2024 13:13:17 +0800</pubDate>
      <gui>/posts/2024/07/24/WindowsThreadStack.html</gui>
    </item>
    <item>
      <title>WinUIGallery 刨析----HomePage</title>
      <link>/posts/2024/03/28/winui-gallery.html</link>
      <description>HomePage主页长这个样子:首先看xaml代码(HomePage.xaml):&amp;lt;local:ItemsPageBasex:Class=&quot;AppUIBasics.HomePage&quot;xmlns=&quot;http://schemas.m...</description>
      <pubDate>Thu, 28 Mar 2024 13:13:17 +0800</pubDate>
      <gui>/posts/2024/03/28/winui-gallery.html</gui>
    </item>
    <item>
      <title>xaml 语法摘记</title>
      <link>/posts/2024/03/10/xaml.html</link>
      <description>引用C#中的类publicclassStudent{publicintid{get,set};}&amp;lt;Windowx:Class=&quot;xxx&quot;...xmlns:local=&quot;clr-namesapce:AppName&quot;&amp;gt;&amp;lt;...</description>
      <pubDate>Sun, 10 Mar 2024 13:13:17 +0800</pubDate>
      <gui>/posts/2024/03/10/xaml.html</gui>
    </item>
    <item>
      <title>C# 入门</title>
      <link>/posts/2024/02/14/dotnet.html</link>
      <description>控件布局《C#入门经典第八版》P300第一个窗口程序[Serializable]注解c#里的Attribute,完全没看懂是怎么起作用的.能几句话说清楚吗?-LoyieKing的回答-知乎https://www.zhihu.com/q...</description>
      <pubDate>Wed, 14 Feb 2024 13:13:17 +0800</pubDate>
      <gui>/posts/2024/02/14/dotnet.html</gui>
    </item>
    <item>
      <title>Hdr</title>
      <link>/posts/2024/02/05/HDR.html</link>
      <description>色彩空间https://zhuanlan.zhihu.com/p/24214731###CIEXYZ和CIERGB的区别可以看到，曲线上出现了负数，这是怎么回事？回想一下前面描述的实验过程，左边是被测试的光色，右边是可调节的三色光的混...</description>
      <pubDate>Mon, 05 Feb 2024 10:13:17 +0800</pubDate>
      <gui>/posts/2024/02/05/HDR.html</gui>
    </item>
    <item>
      <title>生活复盘</title>
      <link>/posts/2024/01/20/life-review.html</link>
      <description>开车加油站后退时一定要注意左右距离，多看后视镜右变道时没有特别注意和右后车得距离,是否可以变道。红灯车位停车时没有理会告警就盲目后退,应该下车检查距离。宁愿错过路口也不要危险变道##</description>
      <pubDate>Sat, 20 Jan 2024 10:13:17 +0800</pubDate>
      <gui>/posts/2024/01/20/life-review.html</gui>
    </item>
    <item>
      <title>D3D11 视频渲染中的变换（平移、缩放、裁剪、镜像、旋转）</title>
      <link>/posts/2023/12/24/d3d11-render-video.html</link>
      <description>需求视频渲染通常会有如下功能:1视频渲染2支持旋转[90,180,270…任意角度]3镜像[垂直,水平]4Alpha通道[虚拟人]5HDR(通常为10BIT)输入数据一个渲染器的输入源目前看上去会有两种:本地预览，来自摄像头、屏幕捕获...</description>
      <pubDate>Sun, 24 Dec 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/12/24/d3d11-render-video.html</gui>
    </item>
    <item>
      <title>windows窗口的透明边缘</title>
      <link>/posts/2023/12/09/visable-window-edge.html</link>
      <description>现象win8之后操作系统会给窗口设置左、右、下三个方向上的”透明边缘”:当我们调用getclientRect函数时,系统返回的窗口区域包含”透明边缘’,并且Bitblt函数也会把这部分区域包含进去。解决办法if(rtc::rtc_wi...</description>
      <pubDate>Sat, 09 Dec 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/12/09/visable-window-edge.html</gui>
    </item>
    <item>
      <title>win7 Aero 效果</title>
      <link>/posts/2023/08/26/Aero.html</link>
      <description>Aero效果对窗口采集的影响DWM(Aero)关闭的情况下,PrintWindow与某些APP会有兼容性问题,导致采集区域内有验证的黑屏、闪屏问题,这时候应该使用Bitblt来规避(会有窗口重叠问题)。DWM开启的情况下,Bitblt...</description>
      <pubDate>Sat, 26 Aug 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/08/26/Aero.html</gui>
    </item>
    <item>
      <title>DWM窗口透明</title>
      <link>/posts/2023/08/26/dwm-alpha.html</link>
      <description>ColorBlendingColorBlending发生在PixelShader的下一个阶段:OutputMergerStage.默认情况下,混合功能时被关闭的。方程Color=SrcColor*SrcBlend+DestColor*...</description>
      <pubDate>Sat, 26 Aug 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/08/26/dwm-alpha.html</gui>
    </item>
    <item>
      <title>D3D11 裁剪texture</title>
      <link>/posts/2023/08/26/texture-clip.html</link>
      <description>定义输入格式structVERTEX{DirectX::XMFLOAT3pos;DirectX::XMFLOAT2tex;staticconstD3D11_INPUT_ELEMENT_DESCinput_desc[2];};//ast...</description>
      <pubDate>Sat, 26 Aug 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/08/26/texture-clip.html</gui>
    </item>
    <item>
      <title>D3D11 缩放texture</title>
      <link>/posts/2023/08/26/texture-scaling.html</link>
      <description>定义输入格式structVERTEX{DirectX::XMFLOAT3pos;DirectX::XMFLOAT2tex;staticconstD3D11_INPUT_ELEMENT_DESCinput_desc[2];};//ast...</description>
      <pubDate>Sat, 26 Aug 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/08/26/texture-scaling.html</gui>
    </item>
    <item>
      <title>D3D11 NV12和RGB的转换</title>
      <link>/posts/2023/08/26/d3d11-rgb2nv12.html</link>
      <description>computeshader?</description>
      <pubDate>Sat, 26 Aug 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/08/26/d3d11-rgb2nv12.html</gui>
    </item>
    <item>
      <title>D3D11 HLSL注意项</title>
      <link>/posts/2023/08/26/d3d11-hlsl.html</link>
      <description>VertexShadlerD3D11_INPUT_ELEMENT_DESCinput_desc[]={//我们知道DXGI_FORMAT_R32G32B32_FLOAT是12字节的{&quot;POSITION&quot;,0,DXGI_FORMAT_R...</description>
      <pubDate>Sat, 26 Aug 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/08/26/d3d11-hlsl.html</gui>
    </item>
    <item>
      <title>Windbg 常用命令</title>
      <link>/posts/2023/06/22/windbg-command.html</link>
      <description>排查野指针前提:开启Gflag全页堆//堆栈VZVCamDshow!DllMain+0xd8d:00007ffe`7270313d8982d8000000movdwordptr[rdx+0D8h],eaxds:00000267`e03...</description>
      <pubDate>Thu, 22 Jun 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/06/22/windbg-command.html</gui>
    </item>
    <item>
      <title>D3D11中的坐标</title>
      <link>/posts/2023/06/22/d3d11-coordinates.html</link>
      <description>顶点着色器中的坐标像素着色器中的坐标</description>
      <pubDate>Thu, 22 Jun 2023 10:13:17 +0800</pubDate>
      <gui>/posts/2023/06/22/d3d11-coordinates.html</gui>
    </item>
    <item>
      <title>C++ 犄角旮旯</title>
      <link>/posts/2023/06/17/CPLUSPLUS.html</link>
      <description>神魔问题我真是服了噢,C++面试现在怎么是这个样子的，问的都是一些”神魔”的问题。构造函数可以调用虚函数么可以,但是没有意义。进入基类就是调用的基类函数,进入子类就是子类的函数析构函数可以调用虚函数么可以,同上。多继承的”缩型”问题多...</description>
      <pubDate>Sat, 17 Jun 2023 11:13:17 +0800</pubDate>
      <gui>/posts/2023/06/17/CPLUSPLUS.html</gui>
    </item>
    <item>
      <title>用D3D11画一个三角形</title>
      <link>/posts/2023/06/17/d3d11-triangle.html</link>
      <description>Vertex三角形的端点。D3D11中的顶点可以看成是三角形的端点坐标(x,y,z)以及这些点的属性。在D3D11中三角形是顺时针处理的。Primitives基元，3D环境中的一个元素,可以是三角形、线、点或者任何其他图形。D3DDE...</description>
      <pubDate>Sat, 17 Jun 2023 11:13:17 +0800</pubDate>
      <gui>/posts/2023/06/17/d3d11-triangle.html</gui>
    </item>
    <item>
      <title>士兵突击</title>
      <link>/posts/2023/06/07/thoughts.html</link>
      <description>士兵突击«conquestofparadise»人总是要分的，而且还会越分越远，想的你抓心挠肺的。可是咱也在长啊，个越来越高，能耐越来越大，总有一天你会发现，到时候你想见谁就见谁，从天南到海北也就一抬腿的距离。报告，我是钢七连第四千九...</description>
      <pubDate>Wed, 07 Jun 2023 11:13:17 +0800</pubDate>
      <gui>/posts/2023/06/07/thoughts.html</gui>
    </item>
    <item>
      <title>QT 学习笔记-布局管理</title>
      <link>/posts/2023/05/21/QtLayout.html</link>
      <description>QT的Widget尺寸策略QSizePolicy::Fixed只能使用sizeHint的大小,任何操作都不会改变控件大小QSizePolicy::MinimumsizeHint为最小大小,控件可以被拉伸QSizePolicy::Max...</description>
      <pubDate>Sun, 21 May 2023 09:10:17 +0800</pubDate>
      <gui>/posts/2023/05/21/QtLayout.html</gui>
    </item>
    <item>
      <title>windows PE 格式</title>
      <link>/posts/2023/01/14/PE.html</link>
      <description>PEPE(PortableExecute)是可执行文件的一个总称,DLL,EXE等，专指32位可执行文件，64位的叫做PE+\PE32+,是一种扩展格式。文件结构如下所示:实在是复杂,从上到下又分为DOS头，NT头，节表以及具体的节，...</description>
      <pubDate>Sat, 14 Jan 2023 13:13:17 +0800</pubDate>
      <gui>/posts/2023/01/14/PE.html</gui>
    </item>
    <item>
      <title>bpf filter code 解释</title>
      <link>/posts/2021/10/06/bpf-filter.html</link>
      <description>背景在linux下编写网络包过滤程序的时候，希望内核只投递指定规则的报文。概要主要是记录如何分析bpffilter的规则码。tcpdump生成bpfcodetcpdump-iloipandudpanddstport65500-d如下:...</description>
      <pubDate>Wed, 06 Oct 2021 13:13:17 +0800</pubDate>
      <gui>/posts/2021/10/06/bpf-filter.html</gui>
    </item>
    <item>
      <title>DirectX 版本历史</title>
      <link>/posts/2021/09/04/directx.html</link>
      <description>D3D的历史维基百科几个重点:Direct3D(简称D3D)是DirectX的一部分D3D和GDI是同层组件Direct3.0被认为是DirectX的第一套完整版本Direct3D6.0，1998年秋微软推出，引进多重贴图（multi...</description>
      <pubDate>Sat, 04 Sep 2021 11:13:17 +0800</pubDate>
      <gui>/posts/2021/09/04/directx.html</gui>
    </item>
    <item>
      <title>windows技术栈摘记</title>
      <link>/posts/2021/08/23/windows-interview.html</link>
      <description>exe文件加载的过程https://blog.csdn.net/blacet/article/details/82255537https://www.cnblogs.com/tinaluo/p/13469325.htmlPE文件的格式...</description>
      <pubDate>Mon, 23 Aug 2021 11:13:17 +0800</pubDate>
      <gui>/posts/2021/08/23/windows-interview.html</gui>
    </item>
    <item>
      <title>流媒体-抽帧</title>
      <link>/posts/2021/06/08/frame-picker.html</link>
      <description>抽帧分为fps过高抽帧和实际编码码率过高抽帧,这里先讨论fps过高引起的抽帧.需求视频输入是0-60帧,基于某些原因需要精确控制输出fps的值.模型如下:视频帧输入——-&amp;gt;抽帧——–&amp;gt;输出到编码器比如,输入fps=60,目...</description>
      <pubDate>Tue, 08 Jun 2021 12:13:17 +0800</pubDate>
      <gui>/posts/2021/06/08/frame-picker.html</gui>
    </item>
    <item>
      <title>webrtc接收端jitter估计器原理推导</title>
      <link>/posts/2021/05/14/webrtc-jitter-buffer.html</link>
      <description>卡尔曼增益简单介绍及推导有一把尺子测量一枚硬币的直径,记录每次测量出的结果(测量值):$x_1$,$x_2$,$x_3$,….那么,对硬币直径的估计值:$\overline{x}_n$=$\frac{(x_1+x_2+x_3+...+...</description>
      <pubDate>Fri, 14 May 2021 14:13:17 +0800</pubDate>
      <gui>/posts/2021/05/14/webrtc-jitter-buffer.html</gui>
    </item>
    <item>
      <title>lea和mov指令的区别</title>
      <link>/posts/2021/04/07/leaVSmov.html</link>
      <description>lea指令lea指令的解释是:loadeffectiveaddress.网上有很多解释,比如知乎高赞汇编语言中mov和lea的区别有哪些？:lea是“loadeffectiveaddress”的缩写，简单的说，lea指令可以用来将一个...</description>
      <pubDate>Wed, 07 Apr 2021 08:13:17 +0800</pubDate>
      <gui>/posts/2021/04/07/leaVSmov.html</gui>
    </item>
    <item>
      <title>X86汇编笔记</title>
      <link>/posts/2020/12/12/x84-assembly.html</link>
      <description>###notes在8086处理器上,如果要用寄存器来提供偏移地址,只能使用BX,si,di,bP,不能使用其它寄存器.以下指令是非法的:mov[ax],dl8086处理器只支持以下几种基地址寄存器和变址寄存器的组合:[bx+si][b...</description>
      <pubDate>Sat, 12 Dec 2020 17:13:17 +0800</pubDate>
      <gui>/posts/2020/12/12/x84-assembly.html</gui>
    </item>
    <item>
      <title>webrtc带宽预测中的Probe（探测）模块</title>
      <link>/posts/2019/08/12/webrtc-porber.html</link>
      <description>Probewebrtc使用gcc（googlecongestioncontrol）来估计带宽，控制当前的发送速度。gcc中基于丢包和基于延迟的算法有个特点：1.能迅速响应带宽的衰减2.不能迅速响应带宽的增加举个例子，如果当前带宽是20...</description>
      <pubDate>Mon, 12 Aug 2019 09:13:17 +0800</pubDate>
      <gui>/posts/2019/08/12/webrtc-porber.html</gui>
    </item>
    <item>
      <title>enable_shared_from_this 实现机制</title>
      <link>/posts/2019/07/16/sharedptrTheory.html</link>
      <description>template&amp;lt;typenameT&amp;gt;classshared_ptr{public:shared_ptr&amp;lt;T&amp;gt;(T*t){set_ptr(this,t);}};template&amp;lt;typenameT&amp;gt;...</description>
      <pubDate>Tue, 16 Jul 2019 09:13:17 +0800</pubDate>
      <gui>/posts/2019/07/16/sharedptrTheory.html</gui>
    </item>
    <item>
      <title>Google拥塞控制算法--TrendingLine滤波器</title>
      <link>/posts/2019/06/28/GccTrendlineFilter.html</link>
      <description>延迟梯度左边的Tx表示发送时间，右边的tx表示接收时间。延迟梯度的计算公式就是：gt(i)=(t(i)-t(i-1))-(T(i)-T(i-1))，实际上就是发送间隔和接收间隔的差值。网络状态良好的情况下，这个值为0，当网络状态变差(...</description>
      <pubDate>Fri, 28 Jun 2019 10:13:17 +0800</pubDate>
      <gui>/posts/2019/06/28/GccTrendlineFilter.html</gui>
    </item>
    <item>
      <title>总结c++中的cast</title>
      <link>/posts/2019/03/11/cppcastall.html</link>
      <description>前言此文算是一个notes，总结一下C++中的各类cast用法和原理。static_cast总结:反转一个定义良好的隐式类型转换static_cast执行关联类型之间的转换，比如一种指针类型向同一个类层次中其它指针类型的转换，或者整数...</description>
      <pubDate>Mon, 11 Mar 2019 12:13:17 +0800</pubDate>
      <gui>/posts/2019/03/11/cppcastall.html</gui>
    </item>
    <item>
      <title>字符串编码</title>
      <link>/posts/2018/11/08/string-coding.html</link>
      <description>前言一直以来，字符串编码总是我摸不着头脑。对待字符串编码问题的策略也是简单粗暴，直接规避：一律使用utf-8。但是，猿在码界漂，哪能不挨刀。今天就总结一下字符串编码问题。编码类型介绍ascii编码格式花样很多。由于计算机是老美发明的，...</description>
      <pubDate>Thu, 08 Nov 2018 17:13:17 +0800</pubDate>
      <gui>/posts/2018/11/08/string-coding.html</gui>
    </item>
    <item>
      <title>C++成员函数指针的大小</title>
      <link>/posts/2018/07/12/theSizeOfMemeberFunctionPointer.html</link>
      <description>c++中的函数指针(假定在64位机器上)我们知道指针的大小恒定的,跟机器位数有关,32位机下,指针是4字节大小,64位机下指针是8字节大小.但是在C++中,有一个比较特殊的地方是C++的类成员函数指针,它的大小是普通指针的2倍.先看一...</description>
      <pubDate>Thu, 12 Jul 2018 17:13:17 +0800</pubDate>
      <gui>/posts/2018/07/12/theSizeOfMemeberFunctionPointer.html</gui>
    </item>
  </channel>
</rss>