---
layout: post
title:  "面试总结"
date:   2018-3-8 15:13:17 +0800
categories: C++ 
location: HangZhou,China 
description:  
---
---
### 不会的问题
2018.3.8 浙江大华 

#### 1、Linux不同线程的线程栈是如何分布的？
面试官问：是连续还是离散？ 因为我是真的不知道，只好回答说不懂。

回来后，查阅了一些资料，很明显不是我这个段位选手能掌握的知识。只好留作以后学习了。

但有一点东西，需要记一下，总结如下：
* 线程栈大小：ulimit a
* 修改线程栈大小：ulimit  Hs 64 限制硬资源，线程栈大小为 64K。 
* 进程栈大小不固定，线程栈大小固定

#### 2、std::set 和 std::map 是如何实现的？
* 我：红黑树
* 面试官: 具体原理是？ 
* 我：不会。
* 面试官好像比较为难，问：那换个，vector<T>的内存管理?
* 我：这还是清楚的，balabala

以前一直认为红黑树这些东西校招是不会出现的，不知道是岗位特殊还是要求太高，竟然问了。
**挖个坑，准备啃STL的相关章节了。**
定

#### 3、C++继承体系的构造函数、析构函数的调用顺序？
* 我：对于构造函数来说，基类先于派生类;对于析构函数，派生类先于基类。
* 面试官：嗯。那你说说看，为什么会这样？
* 我：我想想....(仿佛以前哪里见过，想不起来了)，只好说：不会。
**这样的调用顺序是为了保证基类或者成员类没有在他们创建之前被调用，或者在析构之后还可能被调用。**

#### 4、堆栈、静态存储区区别？（这问题是因为我在笔试的时候答错了）
Linux 对进程地址空间有个标准布局，地址空间中由各个不同的内存段组成 (Memory Segment)，主要的内存段如下：
* 程序段 (Text Segment)：可执行文件代码的内存映射
* 数据段 (Data Segment)：可执行文件的已初始化全局变量的内存映射
* BSS段 (BSS Segment)：未初始化的全局变量或者静态变量（用零页初始化）
* 堆区 (Heap) : 存储动态内存分配，匿名的内存映射
* 栈区 (Stack) : 进程用户空间栈，由编译器自动分配释放，存放函数的参数值、局部变量的值等
* 映射段(Memory Mapping Segment)：任何内存映射文件

#### 5、如果让你来实现memcpy,strcpy，你会怎么做？
* 我：对于strcpy，我重点会关注'\0'
* 面试官：'\0'在ascii码上的数值是多少？
* 我：0
* 面试官：memcpy的实现需要注意什么么？定

* 我：不懂。
* 面试官：需要注意内存重叠。
* 面试官：strncpy需要注意一下什么问题？
回来看了一下memcpy:
> NOTES
       Failure to observe the requirement that the memory areas do not overlap has been  the  source  of  real  bugs.
       (POSIX  and  the  C  standards  are explicit that employing memcpy() with overlapping areas produces undefined
       behavior.)  Most notably, in glibc 2.13 a performance optimization of memcpy() on  some  platforms  (including
       x86-64) included changing the order in which bytes were copied from src to dest.

**握草！他不应该问"调用memcpy需要注意什么问题"么？**

### 模糊的问题
#### 虚函数表
* 面试官：虚函数是如何实现的？
* 我：如果类中定义了虚函数，那么这个类在实例化对象的时候，这个对象在内存中的最开头会有一个指针，指向虚表，在这个表中，每一个单元都存放了一个函数指针，指向每一个虚函数。
* 面试官：那派生类的虚表是什么样的？
* 我：如果派生类中的虚函数覆盖了基类的虚函数，那么在虚表中也会直接覆盖。
* 面试官：如果没有覆盖呢？
* 我：那就会在表中增加一项。
* 面试官：在前面增加还是后面增加？
* 我：(太特么细了，我猜得) 后面。
看了我的简历，问了一下学习情况，以及项目简历：TCP多线程服务器，以及2D小游戏。
**后来想，插在前面的话会造成重排，事实上的确是后面**

### 总结一下大华的面试

面试官开始就说了，他看我简历是服务端，但是他们部门是设备端。不知道是不是岗位原因，问的问题很多都牵扯到了内核上面。比如:select poll epoll的区别和效率问题。很多问题我回答不上来(上面这些)，也有一些是因为描述的不清楚，我一时没反应过来。面试官一直在C/C++上面扯问题，其实我特别想表现一下TCP的掌握程度，竟然不问我！唉！难受！

总的来说，有点可惜，没有发挥出来全部能力。后来就开始聊职业规划，我就一个主题：我是面向工资的，什么赚钱就学什么，比如说JAVA。面试官表示很不解，C++这么好的语言你竟然不打算深入学习？！ 对不起，套用一句知乎名言：贫穷限制了我的理想。

再后来就HR面了，HR鼻孔朝天，我有点难受，上来就问"你对加班怎么看的?" 我表示无法接收没有理由的加班，特别是11、12点的那种加班，9点之前的还可以接收。后面就是扯一下兴趣爱好的，我瞎说了一通。


2018-3-17 杭州迪普
###一面，技术面
* 1.面试官主要看了我的笔试试卷，因为我笔试做的很不错，他象征性的提了一下。
* 2.看了我的简历，问了一下学习情况，以及项目简历：TCP多线程服务器，以及2D小游戏。
* 3.然后就进了2面。
### 二面，HR
* 1.学习情况
* 2.考研怎么回事？
* 3.有没有女朋友？
* 4.大学有没有什么活动？
* 5.实习时间为什么这么短?
* 6.期望工资？ 9K。  我们公司只有7K，但是转正时有一次调薪机会。
* 7.然后就进了三面
### 三面，技术终面
* 1.考研考那里了？
* 2.介绍一下你这个TCP服务器是怎么做的？主要思想是什么？ 我主要提了one loop one thread 思想。
* 3.你这个服务器架构？  主线程接收TCP连接，子线程负责。
* 4.他：也就是说资源的申请和释放不是同一个线程，我不能说这样不对，但是不建议这么做。 我：我主要表达了”嗯，你说的有道理。但是那个大佬就是这么干的"
* 5.后来就扯到了多线程/CPU核数定
/系统调用/TCP listen参数/文件描述符号。这个话题聊了有20分钟
* 6.你对我有什么要问得么？
* 7.开发平台？是开发为主还是维护为主？ Linux ; 老员工才有能力做维护。


2018-3-20 同花顺

### 笔试
* 1.数组名和指针的区别问题。
* 2.  int a = 2; const int& b = a; a = 3;  //问 a 和 b的值是多少？ 
>
我是这么回答面试官的：关于引用，我没有过多的研究。只知道，引用即别名。我一般不会向上面这样用，大部分情况都是把它当作指针使用，用于函数的传参。对于这题目的答案，我只能猜一下。我看到int 前面有个const修饰符，我就直接写了b = 2 , a = 3；

很显然我答错了，这题目就是故意这么设计。

* 3. #include <> 和 # include ""什么区别？
* 4. 写个算法，计算一个字节的1有多少位。

### 技术一面
* 0.面试官看我笔试有一个题目答错了，就简单问了一下引用。
* 1.我看你博客上写了多线程accept问题，你聊一下这个问题。
* 2.还有什么问题来着，忘了。总之就仅仅问了两个技术问题。
* 3-n. 面试官对着表格问了好多学习能力方面的问题。

### HR面
简单聊聊就过去了。

2018-3-21  百世集团

### 笔试
笔试比较偏向“设计”算法、结构这样。还稍微附带了一点操作系统方面的知识。

### 技术一面
* 1.问了一下宇视实习情况。
* 2.数据库怎么样？我考考你，多线程同时查询、修改同一张表，该怎么左？
我直接回答了加锁。怎么加？对整个表加锁。那样子不会有什么效率问题么，有更高效的问题么？他说乐观锁和悲观锁，我一脸蒙蔽。
* 3.还是数据库，这里有一个表结构，你设计一下这个表。 我直接回答了，我数据库并不会。我只会简单的增删改查。
* 4.那你应该对数据结构很熟悉吧？我说还好吧。他：用两个队列实现一个栈。我：我试试。过了5分钟，我是在想不出来。他：那我们换一种，你用数组实现一个栈吧。我：我试试。三分钟后，他比较满意。
* 5.回到刚才那个问题：两个栈去实现一个队列。我：啊！你刚才说的是用两个队列实现一个栈！ 他：啊！那我说错了！那你这个问题再考虑一下。三分钟后，他比较满意。
* 6.hash-map知道么？我就简单说了一下几种散列方式。
### 技术二面
总共有三个面试官参与了这一轮面试，而且采用的是车轮战。我估计是因为他们不太懂C++。所以只能问一些数据结构的问题。一旦被我扯到操作系统、计算机网络，他们就换了一个上来。然后，跳过，继续数据结构。

* 有一个我不能立马写出来的：给了一个多叉树，你遍历一下吧。我给的方案:转换成二叉树，直接递归解决。他说：这样不就破坏了结构么？我说:我一下子写不出来多叉树的遍历。  
* 后来还让我写个线程池出来。我说，我写过，就在项目里面。但是让我几分钟之内写出来，还是有难度的。我就简单描述了一下线程池任务分配的代码。

**总结一下就是，这次面试就是全场混。面试官不懂C++，我不懂JAVA，结果大家都在对牛弹琴。**

我就祈祷，我说的写的，可以让他们觉得我好牛b。

### HR面
估计是小姐姐们都饿了。大致聊了下，就收场了。
